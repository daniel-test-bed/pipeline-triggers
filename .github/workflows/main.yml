name: CI
on:
  issue_comment:
    types:
     - created
     - edited
jobs:    
  mustpass:
      # This job only runs for pull request comments
      name: Job Must Pass
      runs-on: ubuntu-latest
      if: ${{ github.event.issue.pull_request && github.event.comment.body == '/run pipeline' && github.event.comment.author_association=='CONTRIBUTOR' }}
      steps:
        - name: Update check status
          # set the merge commit status check
          # using GitHub REST API
          # see https://docs.github.com/en/rest/reference/repos#create-a-commit-status
          run: |
            curl --request POST \
            --url https://api.github.com/repos/${{ github.repository }}/statuses/454126c0560f2f185dd0dc8bf2f7f9f6d7179a38 \
            --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
            --header 'content-type: application/json' \
            --data '{
              "context": "CI/Job Must Pass",
              "state": "pending",
              "description": "Job running",
              "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }'
        - name: Checkout code
          uses: actions/checkout@v2
        - name: Get Latest Commit ID
          id: commit_id
          run: |
            commit_id=$(curl -s "https://api.github.com/repos/daniel-test-bed/pipeline-triggers/commits/" | jq -r '.sha')
            echo "COMMIT_ID=$commit_id" >> $GITHUB_ENV
        - name: Use Latest Commit ID
          run: echo "Latest Commit ID is ${{ env.COMMIT_ID }}"
        - run: |
            echo "SHA github.sha: ${{ github.sha }}"
            echo "SHA GITHUB_SHA: ${GITHUB_SHA}"
            echo "SHA github.event.pull_request.head.sha: ${{ github.event.pull_request.head.sha }}"
            echo "SHA github.event.comment.commit_id: ${{ github.event.comment.commit_id }}"
            echo "Author Assosiation: ${{ github.event.comment.author_association }}"
            echo '${{ toJson(github.event) }}'
            env
            echo '${{ toJson(github.event.client_payload) }}'
           
        - name: Update check status
          if: ${{ success() }}
          # set the merge commit status check
          # using GitHub REST API
          # see https://docs.github.com/en/rest/reference/repos#create-a-commit-status
          run: |
            curl --request POST \
            --url https://api.github.com/repos/${{ github.repository }}/statuses/454126c0560f2f185dd0dc8bf2f7f9f6d7179a38 \
            --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
            --header 'content-type: application/json' \
            --data '{
              "context": "CI/Job Must Pass",
              "state": "success",
              "description": "Job Passed",
              "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }'

