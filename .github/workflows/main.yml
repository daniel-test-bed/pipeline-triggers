name: CI
on:
  issue_comment:
    types:
     - created
     - edited
jobs:    
  mustpass:
      # This job only runs for pull request comments
      name: Job Must Pass
      runs-on: ubuntu-latest
      if: ${{ github.event.issue.pull_request && github.event.comment.body == '/run pipeline' && github.event.comment.author_association=='CONTRIBUTOR' }}
      steps:
        - name: Get Latest Commit ID
          id: commit_id
          run: |
            pull_request_url=$(jq -r ".issue.pull_request.url" "$GITHUB_EVENT_PATH")
            commit_id=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "$pull_request_url" \
              | jq -r ".head.sha")
            echo "COMMIT_ID=$commit_id" >> $GITHUB_ENV
        - name: Print Latest Commit ID
          run: echo "Latest commit ID is ${{ env.COMMIT_ID }}"
        - name: Set commit status pending
          uses: actions/github-script@v6
          with:
            github-token: ${{ secrets.GITHUB_TOKEN }}
            script: |
              github.repos.createCommitStatus({
                owner: context.repo.owner,
                repo: context.repo.repo,
                sha: ${{ env.COMMIT_ID }},
                state: 'pending',
                target_url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                description: 'Job running',
                context: 'CI/Job Must Pass'
              })
#         - name: Update check status
#           # set the merge commit status check
#           # using GitHub REST API
#           # see https://docs.github.com/en/rest/reference/repos#create-a-commit-status
#           run: |
#             curl --request POST \
#             --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ env.COMMIT_ID }} \
#             --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
#             --header 'content-type: application/json' \
#             --data '{
#               "context": "CI/Job Must Pass",
#               "state": "pending",
#               "description": "Job running",
#               "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
#             }'
        
        - run: |
            echo "SHA github.sha: ${{ github.sha }}"
            echo "SHA GITHUB_SHA: ${GITHUB_SHA}"
            echo "SHA github.event.pull_request.head.sha: ${{ github.event.pull_request.head.sha }}"
            echo "SHA github.event.comment.commit_id: ${{ github.event.comment.commit_id }}"
            echo "Author Assosiation: ${{ github.event.comment.author_association }}"
            echo '${{ toJson(github.event) }}'
            env
            echo '${{ toJson(github.event.client_payload) }}'
  
        - name: Set commit status complete
          uses: actions/github-script@v6
          with:
            github-token: ${{ secrets.GITHUB_TOKEN }}
            script: |
              github.repos.createCommitStatus({
                owner: context.repo.owner,
                repo: context.repo.repo,
                sha: ${{ env.COMMIT_ID }},
                state: 'success',
                target_url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                description: 'Job Passed',
                context: 'CI/Job Must Pass'
              })
#         - name: Update check status
#           if: ${{ success() }}
#           # set the merge commit status check
#           # using GitHub REST API
#           # see https://docs.github.com/en/rest/reference/repos#create-a-commit-status
#           run: |
#             curl --request POST \
#             --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ env.COMMIT_ID }} \
#             --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
#             --header 'content-type: application/json' \
#             --data '{
#               "context": "CI/Job Must Pass",
#               "state": "success",
#               "description": "Job Passed",
#               "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
#             }'

